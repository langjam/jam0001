// this is a test comment
// abc
// dddddddddddd

// // Nested comment
// print "fn i_was_generated(x) { print x; }";
// print "print 5;";

print { name: "value", nested: { object: "here" } };

let x = 5;
print x;


let obj = { name: "test" };
print obj.name;
print clock();

i_was_generated(7);


print 'single quoted string';

print 1 + 1;

print -4838;

print !0;


let callable = { __call__: fn(){} };
print callable();

let callable2 = { __call__: fn() { return 5; } };
print callable2();


fn outer() {
    fn inner() { return 7; }

    let x = 5;

    print "before inner return";

    {
        x = inner();
    }

    print "after inner return";

    return x;
}

print outer();

let x = 0;
while true {
    x = x + 1;
    break;
}
print x;

